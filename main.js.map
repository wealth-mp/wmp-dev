{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/dashboard/dashboard.component.ts","./src/app/component/dashboard/dashboard.component.html","./src/app/component/grid/grid.component.ts","./src/app/component/grid/grid.component.html","./src/app/component/home/home.component.ts","./src/app/component/login-register/login-register.component.ts","./src/app/component/login-register/login-register.component.html","./src/app/component/navbar/navbar.component.ts","./src/app/component/navbar/navbar.component.html","./src/app/guard/admin/admin.guard.ts","./src/app/guard/auth/auth.guard.ts","./src/app/guard/no-auth/no-auth.guard.ts","./src/app/service/auth/auth.service.ts","./src/app/service/http/http.service.ts","./src/app/service/logger/logger.service.ts","./src/environments/environment.dev.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginRegisterComponent} from './component/login-register/login-register.component';\nimport {HomeComponent} from './component/home/home.component';\nimport {DashboardComponent} from './component/dashboard/dashboard.component';\nimport {AuthGuard} from './guard/auth/auth.guard';\nimport {AdminGuard} from './guard/admin/admin.guard';\nimport {NoAuthGuard} from './guard/no-auth/no-auth.guard';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'home'},\n  {path: 'home', component: HomeComponent},\n  {path: 'login', data: {isLoginPage: true}, component: LoginRegisterComponent, canActivate: [NoAuthGuard]},\n  {path: 'register', data: {isLoginPage: false}, component: LoginRegisterComponent, canActivate: [NoAuthGuard]},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule), canLoad: [AdminGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {GridComponent} from './component/grid/grid.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {LoginRegisterComponent} from './component/login-register/login-register.component';\nimport {HomeComponent} from './component/home/home.component';\nimport {DashboardComponent} from './component/dashboard/dashboard.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {NavbarComponent} from './component/navbar/navbar.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GridComponent,\n    LoginRegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatCardModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n}\n","<p>dashboard works!</p>\n","import {AfterViewInit, Component} from '@angular/core';\nimport {GridStack} from 'gridstack';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.scss']\n})\nexport class GridComponent implements AfterViewInit {\n  grid: GridStack;\n\n  ngAfterViewInit(): void {\n    this.grid = GridStack.init();\n  }\n\n}\n","<div class=\"grid-stack\">\n  <div class=\"grid-stack-item\">\n    <div class=\"grid-stack-item-content red\">\n      <p>Hello world!</p>\n    </div>\n  </div>\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n}\n","import {Component} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {HttpService} from '../../service/http/http.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {LoggerService} from '../../service/logger/logger.service';\nimport {AuthService} from '../../service/auth/auth.service';\n\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.scss']\n})\nexport class LoginRegisterComponent {\n  loginPage: boolean;\n  inProgress: boolean;\n  showPassword = false;\n  formGroup = this.fb.group({\n    username: ['', [this.validateUsername.bind(this), Validators.minLength(6), Validators.pattern('[a-zA-Z0-9_\\\\-]*')]],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [this.validatePassword.bind(this), Validators.required, Validators.minLength(8)]]\n  });\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private fb: FormBuilder,\n              private http: HttpService,\n              private snackbar: MatSnackBar,\n              private logger: LoggerService,\n              private authService: AuthService,\n              private router: Router) {\n    activatedRoute.data.subscribe(d => this.loginPage = d.isLoginPage);\n  }\n\n  loginOrRegister(): void {\n    if (this.formGroup.valid) {\n      const value = this.formGroup.value;\n      this.inProgress = true;\n      if (this.loginPage) {\n        this.login(value);\n      } else {\n        this.register(value);\n      }\n    }\n  }\n\n  register(data: {\n    username: string,\n    email: string,\n    password: string\n  }): void {\n    this.http.post('/public/register', {\n      username: data.username,\n      email: data.email,\n      password: data.password\n    }).subscribe(() => {\n      this.logger.debug('Successfully registered');\n      this.login(data);\n    }, err => {\n      this.logger.error('Couldn\\'t register', err.error.errorMessage);\n      this.snackbar.open(err.error.errorMessage, 'OK', {duration: 5000});\n      this.inProgress = false;\n    });\n  }\n\n  login(data: {\n    email: string,\n    password: string\n  }): void {\n    this.http.postResponse('/public/login', {\n      email: data.email,\n      password: data.password\n    }).subscribe(res => {\n      this.logger.debug('Successfully logged in');\n      this.authService.login(res.headers.get('Authorization'));\n      this.router.navigate(['/home']);\n      this.inProgress = false;\n    }, err => {\n      this.logger.error('Couldn\\'t log in', err.error.errorMessage);\n      this.snackbar.open(err.error.errorMessage, 'OK', {duration: 5000});\n      this.inProgress = false;\n    });\n  }\n\n  validateUsername(control: FormControl): any {\n    if (this.loginPage) {\n      return null;\n    }\n    return control.value ? null : {\n      validateUsername: {\n        valid: false\n      }\n    };\n  }\n\n  validatePassword(control: FormControl): any {\n    const pwd: string = control.value;\n    const toReturn = {\n      validatePassword: {\n        valid: false,\n        message: ''\n      }\n    };\n    if (!pwd.match(/[0-9]/g)) {\n      toReturn.validatePassword.message = 'Password must contain at least one number';\n      return toReturn;\n    }\n    if (!pwd.match(/[!@#$%^&*()?<>{}|\\[\\]/`.,:;'\"\\-_+=~]/g)) {\n      toReturn.validatePassword.message = 'Password must contain at least one special character';\n      return toReturn;\n    }\n    if (!pwd.match(/[a-z]/)) {\n      toReturn.validatePassword.message = 'Password must contain at least one lowercase letter';\n      return toReturn;\n    }\n    if (!pwd.match(/[A-Z]/)) {\n      toReturn.validatePassword.message = 'Password must contain at least one uppercase letter';\n      return toReturn;\n    }\n    return null;\n  }\n\n  getUsernameErrors(): string {\n    if (this.loginPage) {\n      return null;\n    }\n    const errors = this.formGroup.get('username').errors;\n    if (!errors) {\n      return '';\n    }\n    if (errors.validateUsername) {\n      return 'Username is required';\n    }\n    if (errors.pattern) {\n      return 'Username can contain only letters, numbers, hyphens, and underscores';\n    }\n    if (errors.minlength) {\n      return 'Username must be at least 6 characters long';\n    }\n  }\n\n  getEmailErrors(): string {\n    const errors = this.formGroup.get('email').errors;\n    if (!errors) {\n      return '';\n    }\n    if (errors.required) {\n      return 'Email is required';\n    }\n    if (errors.email) {\n      return 'Please enter a valid email';\n    }\n  }\n\n  getPasswordErrors(): string {\n    const errors = this.formGroup.get('password').errors;\n    if (!errors) {\n      return '';\n    }\n    if (errors.required) {\n      return 'Password is required';\n    }\n    if (errors.minlength) {\n      return 'Password must be at least 8 characters long';\n    }\n    if (errors.validatePassword) {\n      return errors.validatePassword.message;\n    }\n  }\n}\n","<mat-card class=\"login-register-card\">\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\">\n    <div *ngIf=\"loginPage else registerMessage\" [ngClass.lt-md]=\"{'left-side': false, 'left-side-md': true}\"\n         class=\"container left-side\"\n         fxFlex.lt-md=\"66%\">\n      <h1>Welcome back!</h1>\n      <h3>Please enter your credentials to continue.</h3>\n      <p>Don't have an account? <a routerLink=\"/register\">Register here</a>.</p>\n    </div>\n    <ng-template #registerMessage>\n      <div [ngClass.lt-md]=\"{'left-side': false, 'left-side-md': true}\" class=\"container left-side\" fxFlex.lt-md=\"60%\">\n        <h1>Welcome to Wealth MP!</h1>\n        <h3>Enter your email, username, and password to register.</h3>\n        <p>Your email will not be shared. Learn more here.</p>\n        <p>Already have an account? <a routerLink=\"/login\">Log in here</a>.</p>\n      </div>\n    </ng-template>\n    <div [formGroup]=\"formGroup\" class=\"container\">\n      <mat-form-field *ngIf=\"!loginPage\">\n        <mat-label>Username</mat-label>\n        <input formControlName=\"username\" matInput name=\"username\"/>\n        <mat-error\n          *ngIf=\"formGroup.get('username').touched && formGroup.get('username').invalid\">{{getUsernameErrors()}}</mat-error>\n      </mat-form-field>\n      <br/>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input formControlName=\"email\" matInput name=\"email\"/>\n        <mat-error\n          *ngIf=\"formGroup.get('email').touched && formGroup.get('email').invalid\">{{getEmailErrors()}}</mat-error>\n      </mat-form-field>\n      <br/>\n      <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input [type]=\"showPassword ? 'text' : 'password'\" formControlName=\"password\" matInput name=\"password\"/>\n        <mat-error\n          *ngIf=\"formGroup.get('password').touched && formGroup.get('password').invalid\">{{getPasswordErrors()}}</mat-error>\n        <button (click)=\"showPassword = !showPassword\"\n                class=\"show-pwd-btn\"\n                mat-icon-button\n                matSuffix\n                matTooltip=\"{{showPassword ? 'Hide' : 'Show'}} password\">\n          <mat-icon>visibility</mat-icon>\n        </button>\n      </mat-form-field>\n      <button (click)=\"loginOrRegister()\" *ngIf=\"!inProgress\"\n              [ngClass.lt-md]=\"{'wide-btn': true}\"\n              color=\"accent\"\n              mat-raised-button>{{loginPage ? 'Login' : 'Register'}}</button>\n      <mat-spinner *ngIf=\"inProgress\" diameter=\"40\" strokeWidth=\"2\"></mat-spinner>\n    </div>\n  </div>\n</mat-card>\n","import {Component} from '@angular/core';\nimport {AuthService} from '../../service/auth/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n  constructor(public authService: AuthService) {\n  }\n}\n","<mat-toolbar>\n  <span>Wealth MP</span>\n  <a mat-button routerLink=\"/home\" routerLinkActive=\"active-button\">Home</a>\n  <div class=\"spacer\"></div>\n  <div *ngIf=\"!authService.loggedIn\">\n    <button color=\"primary\" mat-flat-button routerLink=\"/login\">Login</button>\n    <button color=\"accent\" mat-flat-button routerLink=\"/register\">Register</button>\n  </div>\n  <div *ngIf=\"authService.loggedIn\">\n    <button (click)=\"authService.logout()\" color=\"primary\" mat-flat-button>Logout</button>\n  </div>\n</mat-toolbar>\n","import {Injectable} from '@angular/core';\nimport {CanLoad, Route, UrlSegment, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad {\n  canLoad(route: Route, segments: UrlSegment[]):\n    Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../../service/auth/auth.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private snackbar: MatSnackBar) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.loggedIn) {\n      this.snackbar.open('You must log in to access this page', 'OK', {duration: 5000});\n    }\n    return this.authService.loggedIn;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../../service/auth/auth.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoAuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private snackbar: MatSnackBar) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.loggedIn) {\n      this.snackbar.open('You are already logged in', 'OK', {duration: 5000});\n    }\n    return !this.authService.loggedIn;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpService} from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private authenticated = false;\n\n  constructor(private http: HttpService) {\n  }\n\n  get loggedIn(): boolean {\n    return this.authenticated;\n  }\n\n  public login(token: string): void {\n    this.http.token = 'Bearer: ' + token;\n    this.authenticated = true;\n  }\n\n  public logout(): void {\n    this.http.token = '';\n    this.authenticated = false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  token: string;\n\n  constructor(private http: HttpClient) {\n  }\n\n  get<T>(path: string, options?: {\n    headers?: HttpHeaders;\n    params?: HttpParams | {\n      [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n  }): Observable<T> {\n    if (!options) {\n      options = {};\n    }\n    if (this.token) {\n      if (options.headers) {\n        options.headers.set('Authorization', this.token);\n      } else {\n        options.headers = new HttpHeaders({Authorization: this.token});\n      }\n    }\n    return this.http.get<T>(environment.baseUrl + path, this.addToken(options));\n  }\n\n  getResponse<T>(path: string, options?: {\n    headers?: HttpHeaders;\n    params?: HttpParams | {\n      [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n  }): Observable<HttpResponse<T>> {\n    if (!options) {\n      options = {};\n    }\n    if (this.token) {\n      if (options.headers) {\n        options.headers.set('Authorization', this.token);\n      } else {\n        options.headers = new HttpHeaders({Authorization: this.token});\n      }\n    }\n    return this.http.get<T>(environment.baseUrl + path, {...this.addToken(options), observe: 'response'});\n  }\n\n  post<T>(path: string, body: any | null, options?: {\n    headers?: HttpHeaders;\n    params?: HttpParams | {\n      [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n  }): Observable<T> {\n    if (!options) {\n      options = {};\n    }\n    if (this.token) {\n      if (options.headers) {\n        options.headers.set('Authorization', this.token);\n      } else {\n        options.headers = new HttpHeaders({Authorization: this.token});\n      }\n    }\n    return this.http.post<T>(environment.baseUrl + path, body, this.addToken(options));\n  }\n\n  postResponse<T>(path: string, body: any | null, options?: {\n    headers?: HttpHeaders;\n    params?: HttpParams | {\n      [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n  }): Observable<HttpResponse<T>> {\n    return this.http.post<T>(environment.baseUrl + path, body, {...this.addToken(options), observe: 'response'});\n  }\n\n  addToken(options: {\n    headers?: HttpHeaders;\n    params?: HttpParams | {\n      [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n  }): {\n    headers?: HttpHeaders;\n    params?: HttpParams | {\n      [param: string]: string | string[];\n    };\n    reportProgress?: boolean;\n  } {\n    if (!options) {\n      options = {};\n    }\n    if (this.token) {\n      if (options.headers) {\n        options.headers.set('Authorization', this.token);\n      } else {\n        options.headers = new HttpHeaders({Authorization: this.token});\n      }\n    }\n    return options;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {LogLevel} from '../../../environments/ienvironment';\n\nexport interface LogMessage {\n  message: any[];\n  time: Date;\n  level: LogLevel;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n  logMessages: LogMessage[] = [];\n  logLevel: LogLevel = environment.logLevel;\n\n  constructor() {\n  }\n\n  debug(...message): void {\n    if (this.logLevel === 'DEBUG') {\n      console.log('[DEBUG] ', ...message);\n    }\n    this.logMessages.push({message, time: new Date(), level: 'DEBUG'});\n  }\n\n  info(...message): void {\n    if (this.logLevel === 'DEBUG' || this.logLevel === 'INFO') {\n      console.log('[INFO] ', ...message);\n    }\n    this.logMessages.push({message, time: new Date(), level: 'INFO'});\n  }\n\n  warn(...message): void {\n    if (this.logLevel !== 'ERROR' && this.logLevel !== 'OFF') {\n      console.warn('[WARN] ', ...message);\n    }\n    this.logMessages.push({message, time: new Date(), level: 'WARN'});\n  }\n\n  error(...message): void {\n    if (this.logLevel !== 'OFF') {\n      console.error('[ERROR] ', ...message);\n    }\n    this.logMessages.push({message, time: new Date(), level: 'ERROR'});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport {IEnvironment} from './ienvironment';\n\nexport const environment: IEnvironment = {\n  production: false,\n  name: 'development',\n  baseUrl: 'https://wealth-mp.herokuapp.com',\n  logLevel: 'DEBUG'\n};\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport 'gridstack/dist/h5/gridstack-dd-native';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}